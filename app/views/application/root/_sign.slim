.sign
  .in.container
    = simple_form_for User.new, html: { id: 'sign_in' },
      url: session_path('user', format: :json), remote: true do |f|

      = f.hidden_field :remember_me, value: 1

      .close

      .fields
        = f.input :login, hint: false
        = f.input :password

      = f.button :button, t('.in'), class: 'green'

  .up.container
    = simple_form_for User.new, html: { id: 'sign_up' },
      url: registration_path('user', format: :json), remote: true do |f|

      .close

      .fields
        = f.input :login
        = f.input :password

      = f.button :button, t('.up'), class: 'yellow'

coffee:
  sign = $ '#application_root .sign'


  .clicked 'form > .button', ->
    q = $ this
    form = q.closest 'form'

    return if form.hasClass 'opened'
    
    toggle_form sign.find('form').not(form), false
    toggle_form form, true

    form.find('.user_login > .input').focus()

    q.prop disabled: true
    setTimeout ( -> q.prop disabled: false ), 300

    window.location.hash = form.attr 'id'

    return false


  .clicked 'form > .close', ->
    $(this).closest('form').removeClass 'opened'
    window.location.hash = ''
    return false


  toggle_form = ( form, bool )->
    form.toggleClass 'opened', bool
    inputs = form.find 'input.input'
    inputs.each ->
      q = $ this
      if bool
        q.attr 'id', q.data 'id' if q.data 'id'
      else
        q.data 'id', q.attr 'id'
        q.removeAttr 'id'
      return
    return

  if window.location.hash
    find = $ window.location.hash

    if find.length && find.is 'form'
      log 123
      find.find('button').trigger 'mousedown'
